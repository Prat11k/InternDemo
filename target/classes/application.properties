#port
server.port=9090
#Misc
spring.main.allow-bean-definition-overriding=true
spring.main.allow-circular-references=true
#FileUpload
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=300MB
#Email
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=pp4deshmukh@gmail.com
spring.mail.password=Password
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true


#MySql
spring.datasource.username=root
spring.datasource.password=Pratik@123456
spring.datasource.url=jdbc:mysql://localhost:3306/infdb
spring.datasourse.driver-class-name = com.mysql.jdbc.cj.Driver

#spark
spring.autoconfigure.exclude=org.apache.hadoop:hadoop-client-minicluster
#JPA
spring.jpa.open-in-view=false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL8Dialect
spring.h2.console.enabled=true 
#Swagger
springdoc.packagesToScan=spring.all
springdoc.swagger-ui.show-extensions=true
springdoc.swagger-ui.show-common-extensions=true
#MongoDb
spring.data.mongodb.port=27017
spring.data.mongodb.host=localhost
spring.data.mongodb.database=Email
#spring.data.mongodb.typeMappings=com.example.NullMongoTypeMapper
#logger
logging.pattern.console=%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr([${BOOT_EXCEPTION:- }]){cyan} %clr(---){faint} %clr([%15.15t]){faint}%clr(%-40.40logger{39}:%L){cyan} %clr(:){faint} %m%n
#logging.file.name=logs/mylog.log
#KafkaConsumer
spring.kafka.consumer.bootstrap-servers: localhost:9092
spring.kafka.consumer.group-id= myGroup
spring.kafka.consumer.auto-offset-reset= earliest 
#what to do when there is no offset.
spring.kafka.consumer.key-deserializer:org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
#KafkaProducer
spring.kafka.producer.bootstrap-servers: localhost:9092
spring.kafka.producer.key-serializer: org.apache.kafka.common.serialization.StringSerializer
# spring.kafka.producer.value-serializer: org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer: org.springframework.kafka.support.serializer.JsonSerializer